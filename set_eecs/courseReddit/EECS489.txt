I am also sad I was looking forward to taking it
There won’t be EECS 489 in the fall as the professor who normally teaches it is on leave that semester.
I took 489 in F21. I didn’t think it was a lot of work - projects took less time than 281 projects in my experience (we were relatively quicker than other groups from what I could tell though). P1 is individual and super basic, P2 and P3 aren’t too bad, but P4 is one of the most annoying projects I’ve done in EECS (not necessarily hard, just very annoying to debug). Lectures were a little bit dry for the most part but I did find the stuff related to TCP really interesting. Exams weren’t too bad - it didn’t feel like they were trying to trick you just test your basic understanding. 

Overall it was a decent class - I don’t think it’s a must-take but it’s pretty fun if you’re interested in systems and C++
I am also interested dexter. Maybe I will see you next semester
489 is nowhere near as time consuming as 482. Although I'm probably not yet best judge on this. I took 482 when it was 6 credits jammed into 4.

But for me 489's projects were like 4/9 the amount of time as 482.
They will not care, and they will more than likely never know unless you explicitly tell them that you took 12 credits anyways. Usually when you submit transcripts it’s just to prove your degree/enrollment at a university rather than to check your grades.

edit: It might even be more beneficial to NOT take these classes and do things on your own time/around campus to develop yourself as a person and explore your interests. Employers would much rather have someone with diverse experiences and viewpoints than someone who *might* be *marginally* better than other candidates due to some EECS elective
Employers don’t care and they don’t even look at your transcript past your GPA.
Take the minimum credits.  If you can graduate by taking 12, go for it.  Part of my responsibility in my job is hiring Mechanical Engineers.  We look at GPA but not what your schedule looked like.  The key to getting a job is experience, not just in the field but any way you can build experience. Most interviews will contain a portion where they want you to describe, with examples how you've handled certain situations.  We just had some great answers in the last interview and it was from situations outside what they would see in these jobs.  Your whole life is a learning experience, if you take 12 hours and can join a club or something that interests you, that's more important then taking a class that has no real meaning or value to you.
I took 12-14 credits every semester my last couple years in order to make more time for extracurriculars related to my career path and those ECs were way more important to getting a job than taking more credits. Employers usually just use your transcript to verify that you actually graduated
No one will look or care. Just do fairly well and graduate. It’s probably worse to take too many credits and do worse in your classes that semester because of the load.
How would they know?
Slightly different take on this than all the other comments: 

You are going to college at Michigan fam. There are so many insanely interesting classes taught by highly regarded faculty here. Where else in life would you have the chance to interact with talents of this caliber that is this diverse. Go surf the course guide and I guarantee you will find something. Take those P/F if you want, all the benefits without the workload, don’t miss out on it. You will still have plenty of time to do clubs or extracurriculares 

Most electives I’ve taken here have been really eye-opening
Have you considered adding a minor and/or applying to SUGS?
I’m an engineering manager that hires for my own team’s needs. I couldn’t care less if you took 12 or 16 credits. I would much prefer you be involved in extracurriculars related to your major or the job you’re applying for. Career-related extracurricular experience is far more valuable than classroom experience. I also look for candidates that have had work experiences over the summers.
It wouldn't hurt to take chill non-CS courses that are 3 credits or less, even if you don't need anymore electives. You're paying all this money for the opportunity to take classes, not for a degree. You might as well milk the most you can out of this university.
*Fewer than*
Bro I’m literally taking a total of four credits rn, just save yourself the money and relax for your last couple semesters
No one will care about your courseload.  They will care what courses you took, what grades you got, and that you actually learned the material well enough you could do it if they hired you.  Twelve units is the minimum to be full time and 12 units of A's beats 16 with a mix of B's and C's any day of the week.
- I wouldn't say 483 had a ton of "useful" information, but it certainly had very fun projects. How useful the content is depends on what field you're going into, I think. Compilers are a big subfield, and I'm sure compiler knowledge doesn't hurt for systems related work, but it's pretty much totally useless for web development.    
- I've heard 484 mostly can either be self learned, or is covered in 485 (probably the most useful upper level class imo unless somebody plans on never touching web systems).   
- 489 has solid projects (making a proxy server, router, a new protocol), and there's a lot of information, but it's all very disjoint and not very problem-solving esque (like 482). I don't think it'd be difficult to learn the material by yourself, but the content is honestly extremely dry. Not sure if that's a pro or con for taking a class vs self teaching (probably depends on the individual). There's also some overlap with 485 regarding TCP.  
- 490 has a lot of good information that's easily applicable to a lot of areas of programming, but I personally felt that the class had too much theory for my personal taste. Probably a preference thing, especially since I don't care for functional/logical programming. When I took it with Kamil, there was also some overlap in project content with 483 (where I felt that the 483 projects were much more interesting).     
- 493 apparently is relatively self-teachable.
Older grad here, and 481 is the only of them that I personally took, but looking them up, I'd still recommend 481 most strongly. I think software engineering principles apply to everything you do, and was the most valuable course I had when working on medium to large scale development projects. It deals with meta issues of projects, and how to apply formal engineering principles to systems, rather than just knowing how to code. That knowledge can make you stand out from colleagues who haven't studied those principles.

Something like 483 compiler design is an interesting, fun topic, and doesn't hurt to know, but it's a bit esoteric, and I think for most people it's knowledge they won't directly use. Just for comparison, I think with 482, even if you never go on to design operating systems, it still teaches issues about operating systems that are broadly applicable and good to know about. I don't have the same sense with 483.

367 autonomous robotics sounds fun, and useful for *certain* projects and industries, but might be non-useful if you happen to work in areas that don't involve hardware or robotics.

484 database management systems sounds boring, but databases are such a common element in many projects that I'd think it would be quite generally useful. SQL may be completely omitted from the rest of a CS/CE curriculum, and it's good to have a working understanding of it.

Somewhat similar with 489 networking...that's an element of so many types of systems, although your exposure to socket programming from 482 is probably enough to get you started on whatever you'd need to learn for a project in practice. The projects sound like applying different protocols to the same basic ideas. Useful but maybe not so critical.

493 UI development, while it's a broadly useful topic, I feel like that's an area where you can do just fine without a course on it. Like a person with good common sense and visual design skills would probably still be better at UI design than somebody lacking those attributes who did take a course in it.
EECS 485 is really good as well if you haven't taken it.
I’m in 440 Search Engine Design rn for my MDE and it’s a great class. The project seems like it will be lots of fun (early stages so far) and working in a team of 6 is a different but useful dynamic to work in compared to other EECS classes.
482 is a must they say, i’m in 490 rn and it’s really good but kinda mathy in a good way, 388 is pretty fun and very useful so far
490 is way more useful in real life than most classes. Databases and PL are probably the most useful skills to making you an effective software engineer
I'm excited to not be taking EECS 470 anymore. Good riddance.
EECS 183. 

I'm an Econ major and it will be nice to try something new. 
EECS 598-8. Ubiquitous Parallelism FTW.
From an alum: Ralph Williams is an amazing teacher and person. I've lived on three continents and never met anyone else like him. I highly recommend taking his classes next semester or just stopping by to hear a few lectures about Shakespeare. Even, maybe especially, engineering students. He's officially retired, so it's an extra special treat to have him.
Naked Eye astronomy, not only does it sound awesome, but it'll be done and over with once spring break hits, meaning I'll have even more time to spend doing my senior design
I'm about to start my 4th semester of ASL classes (Ling 251) and I LOVE them.
AMCULT 208, Hippies, Beatniks and Punks. I've heard Bruce Conforth is amazing.
482 is certainly valuable if you want low level knowledge. 490 is not that practical but still interesting if you want to dive into Rust/OCaml.
I don’t really see how you are behind. You only need 4 ulcs to graduate + mde. You could probably take all those courses if you really wanted to. 
484 + 485 + 481, 482 + 489, 490 + 494. You’d only have one semester with 3 Eecs.
You could probably take 485 and 489 together in one semester. 482 is also a good class, but I recommend taking it either by itself or with a relatively low workload EECS class on that list
I would call 485 and 482 must-take if you want to become a GOOD software engineer/CS researcher, unless you already know web/systems principles from other sources.

485 is an amazingly wide overview of every part of the web stack, and it can serve as your one and only web dev class.

Some people want to avoid 482 because it’s quite hard, but I really think it’s critical to understanding a full picture of the reality of a computer. You can get away with not taking 482, but I don’t think you can get away from eventually having to learn its concepts, so might as well do em in school.

489 is very interesting and will be very valuable to anyone working in networks. But, if you aren’t, I don’t think the info in it is practically useful.

481 is (I think, I dropped the class after a bit) mostly stuff that can be replaced by internship or job experience.

494 is an insane experience, and will eat up huge chunks of your life if you let it. It was also a great experience in meeting deadlines on a high quality software deliverable. I’m glad I took it, but I would call it optional unless you have an interest in video game dev, then I recommend it.

484 and 490 IDK, but I have heard from an employee at Ocient (state of the art DB company, they hire heavily from UM) that 484 teaches largely antiquated database stuff. I can neither confirm or deny this personally.
Not a CS major, but I did take Linear Algebra(back in 18 or 19). AVOID that class; by far the worst run course I’ve ever been in. From the consistently late grading to the lack of direction from any prof. Felt like a train wreck from beginning to end.
Which linear algebra are you talking about?
Have you considered SUGS
