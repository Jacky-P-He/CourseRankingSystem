367 has a pretty light workload relative to the other EECS class I've taken. There's just not all that much programming that you have to do -- it's much more concept heavy (and there's a decent amount of math). It's also a flipped classroom model, so you can get a lot of instructor help on the projects. The projects are interesting, but they're all run in simulators in your browser (no physical robots), so if you don't know any JavaScript, there's a bit of a learning curve (but it's not too bad).
Been a bit since I've graduated ('18) but 467 had a wild workload. The material wasn't necessarily incomprehensible, but there was a lot to learn in a short amount of time. Also, some of the projects required a ton of time to complete - there were ~20 people in my class and like 12 people pulled an all-nighter in the robot lab before project 2. Most of my group stayed all night in the lab for that project and our robot was still a bit fucked up when demonstration time rolled around.

They may have made it easier in recent times, though.
Long story short: rip
- I wouldn't say 483 had a ton of "useful" information, but it certainly had very fun projects. How useful the content is depends on what field you're going into, I think. Compilers are a big subfield, and I'm sure compiler knowledge doesn't hurt for systems related work, but it's pretty much totally useless for web development.    
- I've heard 484 mostly can either be self learned, or is covered in 485 (probably the most useful upper level class imo unless somebody plans on never touching web systems).   
- 489 has solid projects (making a proxy server, router, a new protocol), and there's a lot of information, but it's all very disjoint and not very problem-solving esque (like 482). I don't think it'd be difficult to learn the material by yourself, but the content is honestly extremely dry. Not sure if that's a pro or con for taking a class vs self teaching (probably depends on the individual). There's also some overlap with 485 regarding TCP.  
- 490 has a lot of good information that's easily applicable to a lot of areas of programming, but I personally felt that the class had too much theory for my personal taste. Probably a preference thing, especially since I don't care for functional/logical programming. When I took it with Kamil, there was also some overlap in project content with 483 (where I felt that the 483 projects were much more interesting).     
- 493 apparently is relatively self-teachable.
Older grad here, and 481 is the only of them that I personally took, but looking them up, I'd still recommend 481 most strongly. I think software engineering principles apply to everything you do, and was the most valuable course I had when working on medium to large scale development projects. It deals with meta issues of projects, and how to apply formal engineering principles to systems, rather than just knowing how to code. That knowledge can make you stand out from colleagues who haven't studied those principles.

Something like 483 compiler design is an interesting, fun topic, and doesn't hurt to know, but it's a bit esoteric, and I think for most people it's knowledge they won't directly use. Just for comparison, I think with 482, even if you never go on to design operating systems, it still teaches issues about operating systems that are broadly applicable and good to know about. I don't have the same sense with 483.

367 autonomous robotics sounds fun, and useful for *certain* projects and industries, but might be non-useful if you happen to work in areas that don't involve hardware or robotics.

484 database management systems sounds boring, but databases are such a common element in many projects that I'd think it would be quite generally useful. SQL may be completely omitted from the rest of a CS/CE curriculum, and it's good to have a working understanding of it.

Somewhat similar with 489 networking...that's an element of so many types of systems, although your exposure to socket programming from 482 is probably enough to get you started on whatever you'd need to learn for a project in practice. The projects sound like applying different protocols to the same basic ideas. Useful but maybe not so critical.

493 UI development, while it's a broadly useful topic, I feel like that's an area where you can do just fine without a course on it. Like a person with good common sense and visual design skills would probably still be better at UI design than somebody lacking those attributes who did take a course in it.
EECS 485 is really good as well if you haven't taken it.
I’m in 440 Search Engine Design rn for my MDE and it’s a great class. The project seems like it will be lots of fun (early stages so far) and working in a team of 6 is a different but useful dynamic to work in compared to other EECS classes.
482 is a must they say, i’m in 490 rn and it’s really good but kinda mathy in a good way, 388 is pretty fun and very useful so far
490 is way more useful in real life than most classes. Databases and PL are probably the most useful skills to making you an effective software engineer
I transferred to UM from WCC after completing most of an associate's degree. Larry David for MTH 197 is the way to go with Linear Algebra there! He's the course coordinator and was also a personal mentor for me; he really enjoys the subject and loves teaching it. I really enjoyed the Linear Algebra course and found it easy to pick up and teach myself when I wanted to get ahead. 

Registration for the course is very simple and you should have no problems if you've already taken calc (it's not a prereq itself, but having taken those classes you'll have what you need).

You can't beat the cost of WCC, and the transfer is easy for UM. I hear a lot of people talk about how some of their credits didn't transfer in weird ways, but every single one of mine (58) transferred without a problem, including Linear Algebra. Just be sure to not take the purely online course, take the virtual classroom. I don't believe online math classes transfer to UM, but the virtual classroom ones will. Double check!

Best of luck!
I wouldn't assume you get a "lower" standard of education outside UofM. I transferred from WCC, and on the whole, I've been much more satisfied with my academic experience at WCC than here.

It might not be a fair comparison in some areas given the circumstances imposed by the pandemic, but here are the primary differences I've found between WCC and UofM:

\- WCC blows the pants off of UofM for online instruction and support

\- Difficulty of class material and quality instruction is dependent on the class and instructor as always, but I've been more satisfied WCC instructors than UofM instructors. RateMyProfessors is key, and part-time instructors can be risky -- I've had extremely good and extremely poor experiences with part-time instructors without much in between.

\- IME, equivalent classes aren't more rigorous or difficult at UofM, but UofM loves making you beat a dead horse with busywork whereas courses at WCC generally prescribe less coursework without sacrificing learning outcomes

All this being said, linear algebra has been on my list of courses I'd like to take as well, and I haven't been able to find a good instructor for it at WCC as of yet. If you see a section taught by Mohammed Abella, snag a seat ASAP.

Let me know if you have any questions or want to run an instructor's name by me; I'm pretty familiar with most of their STEM instructors and some of their humanities instructors.
Curse Equivalency database is a resource that allows you to identify which courses at other universities/colleges are accepted at UM (and specifically CoE) as many frequently transferred courses: https://apps.engin.umich.edu/equivalencies/. The coverage of schools in Michigan is complete or nearly complete, and pretty comprehensive for other US schools.
If you need Math 217 specifically, it's apparently incredibly difficult to transfer from anywhere. As someone who is in zoom Math 217, I wholeheartedly regret taking it this semester. If you're just in it for the computational side, it seems that it's kinda all the same most places, so if you can transfer it, I would just do it.
