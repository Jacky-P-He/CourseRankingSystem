I didn't take 598 but I'm pretty sure it's focused on GPU hardware and GPU programming. I did take 587, and while part of it is GPU programming, it also goes into other parallel processing setups (multi-CPU, with both shared and distributed memory), along with parallel implementations of algorithms for each setup. If you're interested in VSLI, I would say 598 would probably be more useful because it will cover GPU architecture where 587 is almost pure software. The only case where 587 might be more useful is if you're interested in using parallel computing to do analog and/or digital logic simulations.
While not directly an answer to your question, eecs 598 is typically a topics course, with a dozen or so different sections covering different topics that get rotated out every semester, while eecs 587 seems to be a specific regularly offered class. I took a couple eecs courses at Michigan, but don't really know enough about low level stuff like this to comment on the course material.
I faced the same problem and was initially enrolled in both classes last Fall.

The biggest difference is the techniques you want learn. Both classes cover parallel programming concepts and algorithms, but 598 teaches only CUDA (only for GPUs) whereas 587 is more broad (covers MPI, OpenMP as well). I'm not familiar with VLSI, so maybe talking to some older students / advisors about the relative usefulness of CPU vs GPU parallelization could be helpful.
Hey, just wondering if you ended up taking 598 or 587. I'm making the same decision now.
I took it and had a great time. Workload wasn't too bad, and the projects were decently interesting. The course content was more focused on just a few types of machine learning (unlike 445, which tried to cover a ton of different topics), and the types of ML covered are very useful.
No
I’ve taken all the mentioned classes. 498 by Justin Johnson was my favorite class at Michigan. It’s 5 projects in Google Colab in numpy and torch. Pretty much the only class that taught me skills directly applicable in real life. It’s definitely more work than 445, but also less math and more programming.

Affective computing was also very good, but quite different and when I took it had a lighter workload. Professor Provost is an awesome professor. This class touches on a breadth of subjects, but doesn’t go super deep. It’s good for exposure to new topics, but not as hands-on writing code as 498.

442 is an easier version of 498 and I wouldn’t recommend it as much. It re-uses some of the assignments from 498 but uses numpy instead of PyTorch (at least when I took it). Professor Johnson taught 442 for one semester after I took the class, so that might have been fixed. 442 teaches you traditional computer vision techniques which are used very infrequently currently since everything is very ml-focused. The first half of 442 is traditional CV and the second half is a high level overview of what 498 covers.

445 was awesome for a math background of why ML works. I’d recommend 498 first to get the skills needed to actually create ML models, 445 to learn why they work, affective computing to see ways to apply those models, and 442 for traditional computer vision techniques
I want to hear more about this class as well. I am taking it with EECS 442
Atlas goes back 5 years, so it looks like it's only been offered once in the last 5 years which isn't a good sign. Also that one time it was taught by Walter Lasecki... so they'll probably need a new professor to take the class up if they decide to bring it back. I mean you can try contacting the department and showing your interest, but I wouldn't get my hopes up.
hey, in case you are still searching for this. I can see EECS 480 Soc Comput Sys in the Winter 22 course list
