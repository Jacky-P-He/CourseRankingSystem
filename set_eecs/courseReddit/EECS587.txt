I didn't take 598 but I'm pretty sure it's focused on GPU hardware and GPU programming. I did take 587, and while part of it is GPU programming, it also goes into other parallel processing setups (multi-CPU, with both shared and distributed memory), along with parallel implementations of algorithms for each setup. If you're interested in VSLI, I would say 598 would probably be more useful because it will cover GPU architecture where 587 is almost pure software. The only case where 587 might be more useful is if you're interested in using parallel computing to do analog and/or digital logic simulations.
While not directly an answer to your question, eecs 598 is typically a topics course, with a dozen or so different sections covering different topics that get rotated out every semester, while eecs 587 seems to be a specific regularly offered class. I took a couple eecs courses at Michigan, but don't really know enough about low level stuff like this to comment on the course material.
I faced the same problem and was initially enrolled in both classes last Fall.

The biggest difference is the techniques you want learn. Both classes cover parallel programming concepts and algorithms, but 598 teaches only CUDA (only for GPUs) whereas 587 is more broad (covers MPI, OpenMP as well). I'm not familiar with VLSI, so maybe talking to some older students / advisors about the relative usefulness of CPU vs GPU parallelization could be helpful.
Hey, just wondering if you ended up taking 598 or 587. I'm making the same decision now.
